# version: '3.1'
name: blog
services:
  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    container_name: nginx
    environment:
      TZ: ${TZ}
    restart: always
    volumes:
      - ${LOG_PATH}/nginx:/var/log/nginx
      - ${CODE_PATH}:/data/htdocs
      - ${APP_PATH}/nginx/vhosts:/etc/nginx/vhosts
      - ${APP_PATH}/nginx/ssls:/etc/nginx/ssls
      - ${CONF_PATH}/nginx/conf/configs:/etc/nginx/configs
    ports:
      - 80:80
      - 443:443
    depends_on:
      - ghost
    networks:
      - blog_network

  ghost:
    image: ghost:5-alpine
    container_name: ghost
    restart: always
    # ports:
    #   - 8080:2368
    environment:
      TZ: ${TZ}
      # see https://ghost.org/docs/config/#configuration-options
      database__client: mysql
      database__connection__host: db
      database__connection__user: root
      database__connection__password: ${MYSQL_ROOT_PASSWORD}
      database__connection__database: ghost_db
      # this url value is just an example, and is likely wrong for your environment!
      url: ${URL}
      # contrary to the default mentioned in the linked documentation, this image defaults to NODE_ENV=production (so development mode needs to be explicitly specified if desired)
      # NODE_ENV: development
      NODE_ENV: production
    depends_on:
      - db
    volumes:
      - ghost:/var/lib/ghost/content
    networks:
      - blog_network

  db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${TZ}
    volumes:
      - db:/var/lib/mysql
    networks:
      - blog_network

  # phpmyadmin:
  #  image: phpmyadmin:apache
  #  container_name: phpmyadmin
  #  restart: always
  #  environment:
  #    PMA_ARBITRARY: 1
  #    PMA_HOST: db
  #    UPLOAD_LIMIT: 1000000000
  #    # If you want to use customization, remember to modify phpmyadmin_proxy.conf
  #    PMA_ABSOLUTE_URI: ${URL}/abc/
  #    TZ: ${TZ}
  #  stdin_open: true
  #  tty: true
  #  networks:
  #    - blog_network

volumes:
  ghost:
  db:

networks:
  blog_network: