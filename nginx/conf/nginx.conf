user  nginx;
worker_processes  auto;

error_log  /data/var/logs/nginx/error.log notice;
pid        /data/var/logs/nginx/nginx.pid;


events {
    worker_connections  65536;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  escape=json  '{"@timestamp":"$time_local",'
                  '"remote_addr":"$remote_addr",'
                  '"remote_user":"$remote_user",'
                  '"request":"$request",'
                  '"status":"$status",'
                  '"bytes":$body_bytes_sent,'
                  '"referer":"$http_referer",'
                  '"user_agent":"$http_user_agent",'
                  '"x_forwarded":"$http_x_forwarded_for",'
                  '"request_time":$request_time}';

    access_log  /data/var/logs/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;
    server_tokens off;

    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    client_max_body_size 8m;
    large_client_header_buffers 4 32k;
    keepalive_timeout 60;


    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    gzip on;
    gzip_disable "msie6";  # 禁用对 MSIE 6 的 Gzip 压缩（一般 MSIE 6 不太兼容 Gzip）
    gzip_static on; # 啟用靜態壓縮, 但需要將檔案壓縮為.gz 而nginx 會優先使用.gz 可在服務器透過 gzip -r . 當前目錄或者資料夾進行壓縮
    gzip_proxied any; # 允许通过代理服务器传输的请求启用 Gzip 压缩
    gzip_min_length  1k; # 设置响应的内容长度大于 1KB 时才进行压缩
    gzip_buffers     4 16k; # 设置用于压缩的缓冲区大小
    gzip_comp_level 4; # 设置 Gzip 压缩级别，范围是 1-9，级别越高压缩越强
    gzip_types       text/plain application/javascript application/x-javascript text/css application/xml;
    gzip_vary on; # 启用 Vary 头部，确保代理服务器能够正确处理已经使用 Gzip 压缩的资源

    #include ./deny_ips.conf; # ip黑名單
    include ./conf.d/*.conf;
    include ./vhosts/*.conf;
    
}